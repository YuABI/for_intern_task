ruby:
  object_name     = controller_name.singularize
  object          = instance_variable_get("@#{object_name}").decorate
  decorator_model = eval("#{controller_name.singularize}".camelize + "Decorator")

.col-12
  .card
    .card-header.d-flex.align-items-center
      h4.card-title
        = "支出"
      .btn-group.ms-3
        - UserLifeplanExpense.user_lifeplan_expense_kind.values.each do |kind|
          = link_to_remote kind.text,
            { url: add_expense_url({user_lifeplan_expense_kind: kind}),
              method: "POST", submit: "form", loading: true },
            { class: "btn btn-#{color_add}" }
    .card-body
      .table-responsive
        table.table.table-bordered.mb-0
          thead
            tr
              - UserLifeplanExpenseDecorator.form_columns.each do |form_object|
                th.bg-light.text-nowrap(style="#{cell_min(form_object)}")
                  = UserLifeplanExpense.human form_object
              th.bg-light.text-center
          tbody
            - f.fields_for :user_lifeplan_expenses do |fe|
              - unless fe.object._destroy
                tr
                  - UserLifeplanExpenseDecorator.form_objects(current_user,fe).each do |form_object_lists|
                    - form_object_lists.each do |form_object|
                      td
                        = form_object[:input]
                  td.text-center
                    = fe.hidden_field(:user_lifeplan_expense_kind)
                    = link_to_remote icon_del,
                      { url: del_expense_url(target_idx: fe.index), method: "POST", submit: "form", loading: true },
                      { class: "btn btn-#{color_destroy}" }
              - else
                = fe.hidden_field(:_destroy, value: 1)
                - fe.object.class.column_names.each do |column|
                  = fe.hidden_field(column)
        = f.object.decorate.error_message_html(:user_lifeplan_expenses,:admin)
