ruby:
  object_name     = controller_name.singularize
  object          = instance_variable_get("@#{object_name}").decorate
  decorator_model = eval("#{controller_name.singularize}".camelize + "Decorator")

.col-12
  .card
    .card-header.d-flex.align-items-center
      h4.card-title.fw-bold
        = "収入"
      .btn-group.ms-3
        - UserLifeplanIncome.user_lifeplan_income_kind.values.each do |kind|
          = link_to_remote kind.text,
            { url: add_income_url({user_lifeplan_income_kind: kind}),
              method: "POST", submit: "form", loading: true },
            { class: "btn btn-#{color_add}" }
    .card-body
      .table-responsive
        table.table.table-bordered.mb-0
          thead
            tr
              - UserLifeplanIncomeDecorator.form_columns.each do |form_object|
                th.bg-light.text-nowrap(style="#{cell_style(form_object)}"
                  class="#{%i[yearly_amount].include?(form_object) ? 'fw-bold fs-5' : ''}")
                  = UserLifeplanIncome.human form_object
              th.bg-light.text-center
          tbody
            - f.fields_for :user_lifeplan_incomes do |fe|
              - unless fe.object._destroy
                tr
                  - UserLifeplanIncomeDecorator.form_objects(current_user,fe).each do |form_object_lists|
                    - form_object_lists.each do |form_object|
                      td(style="#{cell_style(form_object[:code])} background-color: #fff;")
                        = form_object[:input]
                  td.text-center
                    = fe.hidden_field(:user_lifeplan_income_kind)
                    = link_to_remote icon_del,
                      { url: del_income_url(target_idx: fe.index), method: "POST", submit: "form", loading: true },
                      { class: "btn btn-#{color_destroy}" }
                    - fe.object.class.column_names.each do |column|
                      - next unless [:id, :deleted, :user_id, :address_type].include?(column.to_sym)
                      = fe.hidden_field(column)
              - else
                = fe.hidden_field(:_destroy, value: 1)
                - fe.object.class.column_names.each do |column|
                  = fe.hidden_field(column)
        = f.object.decorate.error_message_html(:user_lifeplan_incomes,:admin)
      = render UserLifeplans::Form::FinanceConditionsComponent.new(form: , user_lifeplan: , current_user: ,
                                                                 title_prefix: '収入', finance_condition_kind: 'income')
