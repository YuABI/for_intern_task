ruby:
  object_name     = controller_name.singularize
  object          = instance_variable_get("@#{object_name}").decorate
  decorator_model = eval("#{controller_name.singularize}".camelize + "Decorator")

div.py-3
  div.mb-3
    h4.d-inline-block.me-3.card-title
      = "#{title_prefix ? title_prefix + ' ' : ''}財務情報提出"
    = link_to_remote icon_add,
      { url: add_finance_condition_url, method: "POST", submit: "form", loading: true },
      { class: "btn btn-#{color_add} text-right" }
  div
    .table-responsive
      table.table.table-bordered.mb-0
        thead
          tr
            - UserLifeplanFinanceConditionDecorator.codes.each do |code|
              th.bg-light.text-nowrap
                = UserLifeplanFinanceCondition.human code
            th.bg-light.text-center
        tbody
          - f.fields_for :user_lifeplan_finance_conditions do |fe|
            - next if finance_condition_kind.present? && fe.object.finance_condition_kind != finance_condition_kind
            - unless fe.object._destroy
              tr
                - UserLifeplanFinanceConditionDecorator.form_objects(current_user,fe).each do |form_object_lists|
                  - form_object_lists.each do |form_object|
                    td
                      - if form_object[:code] == :docs
                        - fe.object.docs.each do |doc|
                          = fe.hidden_field(:docs, multiple: true, value: doc.signed_id)
                      = form_object[:input]
                      - if form_object[:code] == :docs
                        b.me-1
                          | アップロード済みファイル
                        .uploaded-files.d-flex.gap-1
                          - fe.object.docs.each do |doc|
                            = link_to doc.filename.to_s, url_for(doc), target: :_blank, class: 'me-1'
                td.text-center
                  = link_to_remote icon_del,
                    { url: del_finance_condition_url(target_idx: fe.index),
                      method: "POST", submit: "form", loading: true },
                    { class: "btn btn-#{color_destroy}" }
                  - fe.object.class.column_names.each do |column|
                    - next unless [:id, :deleted, :user_id, :finance_condition_kind].include?(column.to_sym)
                    = fe.hidden_field(column)
            - else
              = fe.hidden_field(:_destroy, value: 1)
              - fe.object.class.column_names.each do |column|
                = fe.hidden_field(column)
      = f.object.decorate.error_message_html(:user_lifeplan_assets,:admin)
