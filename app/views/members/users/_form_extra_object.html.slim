ruby:
  object_name     = controller_name.singularize
  object          = instance_variable_get("@#{object_name}").decorate
  decorator_model = eval("#{controller_name.singularize}".camelize + "Decorator")

.col-12.d-flex.pb-4
  = link_to_remote "住所追加",
          { url: add_address_members_users_path(id: object.exists_db? ? object.id : nil), method: "POST", submit: "form", loading: true },
          { class: "btn btn-#{color_add}" }
.col-12
  = f.fields_for :addresses do |fe|
    - unless fe.object._destroy
      .card
        .card-header.justify-content-between.d-flex.align-items-center
          h4.card-title
            = fe.select(:address_type, fe.object.class.address_type.options, {}, { class: "form-select #{fe.object.decorate.input_class(:address_type, :member)}" })
          - unless  fe.object.address_type.user?
            = link_to_remote icon_del,
                    { url: del_address_members_users_path(id: object.exists_db? ? object.id : nil, target_idx: fe.index), method: "POST", submit: "form", loading: true }, { class: "btn btn-sm btn-#{color_destroy}" }
        .card-body
          = render partial: "form_object", locals: {f: fe, decorator_model: AddressDecorator, object_name: :"user_addresses_attributes_#{fe.index}", object: fe.object}

          - fe.object.class.column_names.each do |column|
            - next unless [:id, :deleted, :user_id, :address_type].include?(column.to_sym)
            = fe.hidden_field(column)
    - else
      = fe.hidden_field(:_destroy, value: 1)
      - fe.object.class.column_names.each do |column|
        = fe.hidden_field(column)
    = f.object.decorate.error_message_html(:addresses,:member)
