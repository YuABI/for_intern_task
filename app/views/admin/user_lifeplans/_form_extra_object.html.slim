ruby:
  object_name     = controller_name.singularize
  object          = instance_variable_get("@#{object_name}").decorate
  decorator_model = eval("#{controller_name.singularize}".camelize + "Decorator")

.col-12
  .card
    .card-header.justify-content-between.d-flex.align-items-center
      h4.card-title
        = "資産"
    .card-body
      .table-responsive
        table.table.table-bordered.mb-0
          thead
            tr
              th.bg-light
                = UserLifeplanAsset.human :name
              th.bg-light
                = UserLifeplanAsset.human_attribute_name(:name)
              th.bg-light
                = UserLifeplanAsset.human_attribute_name(:financial_institution_name)
              th.bg-light
                = UserLifeplanAsset.human_attribute_name(:account_number)
              th.bg-light
                = UserLifeplanAsset.human_attribute_name(:amount_of_money)
              th.bg-light
                = UserLifeplanAsset.human_attribute_name(:content)
              th.bg-light
                = UserLifeplanAsset.human_attribute_name(:company_name)
              th.bg-light
                = UserLifeplanAsset.human_attribute_name(:description)
              th.bg-light.text-center
                = link_to_remote icon_add,
                        { url: add_user_lifeplan_asset_admin_user_lifeplans_path(id: object.exists_db? ? object.id : nil), method: "POST", submit: "form", loading: true },
                        { class: "btn btn-#{color_add}" }
          tbody
            = f.fields_for :user_lifeplan_assets do |fe|
              - unless fe.object._destroy
                tr
                  td
                    = fe.text_field(:name, class: fe.object.decorate.input_class(:inquiry_at, :admin))
                  td.text-center
                    = link_to_remote icon_del,
                            { url: del_user_lifeplan_asset_admin_user_lifeplans_path(id: object.exists_db? ? object.id : nil,target_idx: fe.index), method: "POST", submit: "form", loading: true }, { class: "btn btn-#{color_destroy}" }
              - else
                = fe.hidden_field(:_destroy, value: 1)
                - fe.object.class.column_names.each do |column|
                  = fe.hidden_field(column)
        = f.object.decorate.error_message_html(:user_lifeplan_assets,:admin)

.col-12
  .card
    .card-header.justify-content-between.d-flex.align-items-center
      h4.card-title
        = "収入"
    .card-body
      .table-responsive
        table.table.table-bordered.mb-0
          thead
            tr
              th.bg-light
                = UserLifeplanIncome.human :name
              th.bg-light.text-center
                = link_to_remote icon_add,
                        { url: add_user_lifeplan_income_admin_user_lifeplans_path(id: object.exists_db? ? object.id : nil), method: "POST", submit: "form", loading: true },
                        { class: "btn btn-#{color_add}" }
          tbody
            = f.fields_for :user_lifeplan_incomes do |fe|
              - unless fe.object._destroy
                tr
                  td
                    = fe.text_field(:name, class: fe.object.decorate.input_class(:inquiry_at, :admin))
                  td.text-center
                    = link_to_remote icon_del,
                            { url: del_user_lifeplan_income_admin_user_lifeplans_path(id: object.exists_db? ? object.id : nil,target_idx: fe.index), method: "POST", submit: "form", loading: true }, { class: "btn btn-#{color_destroy}" }
              - else
                = fe.hidden_field(:_destroy, value: 1)
                - fe.object.class.column_names.each do |column|
                  = fe.hidden_field(column)
        = f.object.decorate.error_message_html(:user_lifeplan_incomes,:admin)

.col-12
  .card
    .card-header.justify-content-between.d-flex.align-items-center
      h4.card-title
        = "支出"
    .card-body
      .table-responsive
        table.table.table-bordered.mb-0
          thead
            tr
              th.bg-light
                = UserLifeplanExpense.human :name
              th.bg-light.text-center
                = link_to_remote icon_add,
                        { url: add_user_lifeplan_expense_admin_user_lifeplans_path(id: object.exists_db? ? object.id : nil), method: "POST", submit: "form", loading: true },
                        { class: "btn btn-#{color_add}" }
          tbody
            = f.fields_for :user_lifeplan_expenses do |fe|
              - unless fe.object._destroy
                tr
                  td
                    = fe.text_field(:name, class: fe.object.decorate.input_class(:inquiry_at, :admin))
                  td.text-center
                    = link_to_remote icon_del,
                            { url: del_user_lifeplan_expense_admin_user_lifeplans_path(id: object.exists_db? ? object.id : nil,target_idx: fe.index), method: "POST", submit: "form", loading: true }, { class: "btn btn-#{color_destroy}" }
              - else
                = fe.hidden_field(:_destroy, value: 1)
                - fe.object.class.column_names.each do |column|
                  = fe.hidden_field(column)
        = f.object.decorate.error_message_html(:user_lifeplan_expenses,:admin)
